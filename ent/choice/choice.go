// Code generated by entc, DO NOT EDIT.

package choice

const (
	// Label holds the string label denoting the choice type in the database.
	Label = "choice"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldContent holds the string denoting the content field in the database.
	FieldContent = "content"
	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// EdgeChoiceanswers holds the string denoting the choiceanswers edge name in mutations.
	EdgeChoiceanswers = "choiceanswers"
	// Table holds the table name of the choice in the database.
	Table = "choices"
	// ParentTable is the table the holds the parent relation/edge.
	ParentTable = "choices"
	// ParentInverseTable is the table name for the Question entity.
	// It exists in this package in order to avoid circular dependency with the "question" package.
	ParentInverseTable = "questions"
	// ParentColumn is the table column denoting the parent relation/edge.
	ParentColumn = "question_choices"
	// ChoiceanswersTable is the table the holds the choiceanswers relation/edge.
	ChoiceanswersTable = "choice_answers"
	// ChoiceanswersInverseTable is the table name for the ChoiceAnswer entity.
	// It exists in this package in order to avoid circular dependency with the "choiceanswer" package.
	ChoiceanswersInverseTable = "choice_answers"
	// ChoiceanswersColumn is the table column denoting the choiceanswers relation/edge.
	ChoiceanswersColumn = "choice_choiceanswers"
)

// Columns holds all SQL columns for choice fields.
var Columns = []string{
	FieldID,
	FieldContent,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "choices"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"question_choices",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// ContentValidator is a validator for the "content" field. It is called by the builders before save.
	ContentValidator func(string) error
)
