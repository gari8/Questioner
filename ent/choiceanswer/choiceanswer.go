// Code generated by entc, DO NOT EDIT.

package choiceanswer

import (
	"time"
)

const (
	// Label holds the string label denoting the choiceanswer type in the database.
	Label = "choice_answer"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCratedAt holds the string denoting the crated_at field in the database.
	FieldCratedAt = "crated_at"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// Table holds the table name of the choiceanswer in the database.
	Table = "choice_answers"
	// OwnerTable is the table the holds the owner relation/edge.
	OwnerTable = "choice_answers"
	// OwnerInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	OwnerInverseTable = "users"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "user_choiceanswers"
	// ParentTable is the table the holds the parent relation/edge.
	ParentTable = "choice_answers"
	// ParentInverseTable is the table name for the Choice entity.
	// It exists in this package in order to avoid circular dependency with the "choice" package.
	ParentInverseTable = "choices"
	// ParentColumn is the table column denoting the parent relation/edge.
	ParentColumn = "choice_choiceanswers"
)

// Columns holds all SQL columns for choiceanswer fields.
var Columns = []string{
	FieldID,
	FieldCratedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "choice_answers"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"choice_choiceanswers",
	"user_choiceanswers",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCratedAt holds the default value on creation for the "crated_at" field.
	DefaultCratedAt func() time.Time
)
